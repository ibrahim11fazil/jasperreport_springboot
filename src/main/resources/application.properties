
#
##Basic Spring Boot Config for Oracle for testing
#spring.datasource.url=${DB_URL_CRS:jdbc:oracle:thin:@//172.19.10.18:1521/CSTEST}
spring.datasource.url=${DB_URL_CRS:jdbc:oracle:thin:@//172.19.10.18:1521/CSTEST}
#spring.datasource.username=${DB_USER_CRS:CRPUSER}
#spring.datasource.password=${DB_PASSWORD_CRS:crpusr123}
spring.datasource.username=${DB_USER_CRS:RPTUSER}
spring.datasource.password=${DB_PASSWORD_CRS:rpt4cstest$}
##
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
## Keep the connection alive if idle for a long time (needed in production)
#
spring.datasource.testWhileIdle=trueå
spring.datasource.validationQuery=SELECT 1
#
#
spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect
#
## ===============================
## = JPA / HIBERNATE
## ===============================
## Show or not log for each sql query
#
spring.jpa.show-sql=false
#
## Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
## schema will be automatically created afresh for every start of application
##spring.jpa.hibernate.ddl-auto=create-drop
## Naming strategy
#
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
#
## Allows Hibernate to generate SQL optimized for a particular DBMS
#
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle10gDialect

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=./uploads